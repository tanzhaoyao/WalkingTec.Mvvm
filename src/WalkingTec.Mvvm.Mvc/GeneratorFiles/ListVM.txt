using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using WalkingTec.Mvvm.Core;
using WalkingTec.Mvvm.Core.Extensions;
using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using $modelnamespace$;
$othernamespace$

namespace $vmnamespace$
{
    public partial class $modelname$ListVM : BasePagedListVM<$modelname$_View, $modelname$Searcher>
    {
        protected override List<GridAction> InitGridAction()
        {
            return new List<GridAction>
            {
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.Create, "新建","$area$", dialogWidth: 800),
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.Edit, "修改","$area$", dialogWidth: 800),
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.Delete, "删除", "$area$",dialogWidth: 800),
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.Details, "详细","$area$", dialogWidth: 800),
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.BatchEdit, "批量修改","$area$", dialogWidth: 800),
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.BatchDelete, "批量删除","$area$", dialogWidth: 800),
                this.MakeStandardAction("$modelname$", GridActionStandardTypesEnum.Import, "导入","$area$", dialogWidth: 800),
                this.MakeStandardExportAction(null,false,ExportEnum.Excel)
            };
        }

        protected override IEnumerable<IGridColumn<$modelname$_View>> InitGridHeader()
        {
            return new List<GridColumn<$modelname$_View>>{$headers$
                this.MakeGridHeaderAction(width: 200)
            };
        }$format$

        public override IOrderedQueryable<$modelname$_View> GetSearchQuery()
        {
            var query = DC.Set<$modelname$>()$where$
                .Select(x => new $modelname$_View
                {
				    ID = x.ID,$select$
                })
                .OrderBy(x => x.ID);
            return query;
        }

    }

    public class $modelname$_View : $modelname${$subpros$

    }
}
